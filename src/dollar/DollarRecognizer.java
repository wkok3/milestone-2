/**
 * The $1 Unistroke Recognizer
 *
 *  Jacob O. Wobbrock, Ph.D.
 *  The Information School
 *  University of Washington
 *  Seattle, WA 98195-2840
 *  wobbrock@uw.edu
 *
 *  Andrew D. Wilson, Ph.D.
 *  Microsoft Research
 *  One Microsoft Way
 *  Redmond, WA 98052
 *  awilson@microsoft.com
 *
 *  Yang Li, Ph.D.
 *  Department of Computer Science and Engineering
 *  University of Washington
 *  Seattle, WA 98195-2840
 *  yangli@cs.washington.edu
 *
 * The academic publication for the $1 recognizer, and what should be
 * used to cite it, is:
 *
 *     Wobbrock, J.O., Wilson, A.D. and Li, Y. (2007). Gestures without
 *     libraries, toolkits or training: A $1 recognizer for user interface
 *     prototypes. Proceedings of the ACM Symposium on User Interface
 *     Software and Technology (UIST '07). Newport, Rhode Island (October
 *     7-10, 2007). New York: ACM Press, pp. 159-168.
 *     https://dl.acm.org/citation.cfm?id=1294238
 *
 * The Protractor enhancement was separately published by Yang Li and programmed
 * here by Jacob O. Wobbrock:
 *
 *     Li, Y. (2010). Protractor: A fast and accurate gesture
 *     recognizer. Proceedings of the ACM Conference on Human
 *     Factors in Computing Systems (CHI '10). Atlanta, Georgia
 *     (April 10-15, 2010). New York: ACM Press, pp. 2169-2172.
 *     https://dl.acm.org/citation.cfm?id=1753654
 *
 * This software is distributed under the "New BSD License" agreement:
 *
 * Copyright (C) 2007-2012, Jacob O. Wobbrock, Andrew D. Wilson and Yang Li.
 * All rights reserved. Last updated July 14, 2018.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the names of the University of Washington nor Microsoft,
 *      nor the names of its contributors may be used to endorse or promote
 *      products derived from this software without specific prior written
 *      permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Jacob O. Wobbrock OR Andrew D. Wilson
 * OR Yang Li BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
 * OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Port to Java and other modifications by Keith Edwards, 2019.
**/
package dollar;

import java.util.ArrayList;
import java.util.Vector;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.geom.*;

public class DollarRecognizer {
	private ArrayList<Unistroke> unistrokes = new ArrayList<Unistroke>();
	
	public DollarRecognizer() {
		initializeTemplates();
	}
	
	private void initializeTemplates() {
		this.unistrokes.add(new Unistroke("triangle", new Point[]{new Point(137,139),new Point(135,141),new Point(133,144),new Point(132,146),new Point(130,149),new Point(128,151),new Point(126,155),new Point(123,160),new Point(120,166),new Point(116,171),new Point(112,177),new Point(107,183),new Point(102,188),new Point(100,191),new Point(95,195),new Point(90,199),new Point(86,203),new Point(82,206),new Point(80,209),new Point(75,213),new Point(73,213),new Point(70,216),new Point(67,219),new Point(64,221),new Point(61,223),new Point(60,225),new Point(62,226),new Point(65,225),new Point(67,226),new Point(74,226),new Point(77,227),new Point(85,229),new Point(91,230),new Point(99,231),new Point(108,232),new Point(116,233),new Point(125,233),new Point(134,234),new Point(145,233),new Point(153,232),new Point(160,233),new Point(170,234),new Point(177,235),new Point(179,236),new Point(186,237),new Point(193,238),new Point(198,239),new Point(200,237),new Point(202,239),new Point(204,238),new Point(206,234),new Point(205,230),new Point(202,222),new Point(197,216),new Point(192,207),new Point(186,198),new Point(179,189),new Point(174,183),new Point(170,178),new Point(164,171),new Point(161,168),new Point(154,160),new Point(148,155),new Point(143,150),new Point(138,148),new Point(136,148)}));
		this.unistrokes.add(new Unistroke("x", new Point[]{new Point(87,142),new Point(89,145),new Point(91,148),new Point(93,151),new Point(96,155),new Point(98,157),new Point(100,160),new Point(102,162),new Point(106,167),new Point(108,169),new Point(110,171),new Point(115,177),new Point(119,183),new Point(123,189),new Point(127,193),new Point(129,196),new Point(133,200),new Point(137,206),new Point(140,209),new Point(143,212),new Point(146,215),new Point(151,220),new Point(153,222),new Point(155,223),new Point(157,225),new Point(158,223),new Point(157,218),new Point(155,211),new Point(154,208),new Point(152,200),new Point(150,189),new Point(148,179),new Point(147,170),new Point(147,158),new Point(147,148),new Point(147,141),new Point(147,136),new Point(144,135),new Point(142,137),new Point(140,139),new Point(135,145),new Point(131,152),new Point(124,163),new Point(116,177),new Point(108,191),new Point(100,206),new Point(94,217),new Point(91,222),new Point(89,225),new Point(87,226),new Point(87,224)}));
		this.unistrokes.add(new Unistroke("rectangle", new Point[]{new Point(78,149),new Point(78,153),new Point(78,157),new Point(78,160),new Point(79,162),new Point(79,164),new Point(79,167),new Point(79,169),new Point(79,173),new Point(79,178),new Point(79,183),new Point(80,189),new Point(80,193),new Point(80,198),new Point(80,202),new Point(81,208),new Point(81,210),new Point(81,216),new Point(82,222),new Point(82,224),new Point(82,227),new Point(83,229),new Point(83,231),new Point(85,230),new Point(88,232),new Point(90,233),new Point(92,232),new Point(94,233),new Point(99,232),new Point(102,233),new Point(106,233),new Point(109,234),new Point(117,235),new Point(123,236),new Point(126,236),new Point(135,237),new Point(142,238),new Point(145,238),new Point(152,238),new Point(154,239),new Point(165,238),new Point(174,237),new Point(179,236),new Point(186,235),new Point(191,235),new Point(195,233),new Point(197,233),new Point(200,233),new Point(201,235),new Point(201,233),new Point(199,231),new Point(198,226),new Point(198,220),new Point(196,207),new Point(195,195),new Point(195,181),new Point(195,173),new Point(195,163),new Point(194,155),new Point(192,145),new Point(192,143),new Point(192,138),new Point(191,135),new Point(191,133),new Point(191,130),new Point(190,128),new Point(188,129),new Point(186,129),new Point(181,132),new Point(173,131),new Point(162,131),new Point(151,132),new Point(149,132),new Point(138,132),new Point(136,132),new Point(122,131),new Point(120,131),new Point(109,130),new Point(107,130),new Point(90,132),new Point(81,133),new Point(76,133)}));
		this.unistrokes.add(new Unistroke("circle", new Point[]{new Point(127,141),new Point(124,140),new Point(120,139),new Point(118,139),new Point(116,139),new Point(111,140),new Point(109,141),new Point(104,144),new Point(100,147),new Point(96,152),new Point(93,157),new Point(90,163),new Point(87,169),new Point(85,175),new Point(83,181),new Point(82,190),new Point(82,195),new Point(83,200),new Point(84,205),new Point(88,213),new Point(91,216),new Point(96,219),new Point(103,222),new Point(108,224),new Point(111,224),new Point(120,224),new Point(133,223),new Point(142,222),new Point(152,218),new Point(160,214),new Point(167,210),new Point(173,204),new Point(178,198),new Point(179,196),new Point(182,188),new Point(182,177),new Point(178,167),new Point(170,150),new Point(163,138),new Point(152,130),new Point(143,129),new Point(140,131),new Point(129,136),new Point(126,139)}));
		this.unistrokes.add(new Unistroke("check", new Point[]{new Point(91,185),new Point(93,185),new Point(95,185),new Point(97,185),new Point(100,188),new Point(102,189),new Point(104,190),new Point(106,193),new Point(108,195),new Point(110,198),new Point(112,201),new Point(114,204),new Point(115,207),new Point(117,210),new Point(118,212),new Point(120,214),new Point(121,217),new Point(122,219),new Point(123,222),new Point(124,224),new Point(126,226),new Point(127,229),new Point(129,231),new Point(130,233),new Point(129,231),new Point(129,228),new Point(129,226),new Point(129,224),new Point(129,221),new Point(129,218),new Point(129,212),new Point(129,208),new Point(130,198),new Point(132,189),new Point(134,182),new Point(137,173),new Point(143,164),new Point(147,157),new Point(151,151),new Point(155,144),new Point(161,137),new Point(165,131),new Point(171,122),new Point(174,118),new Point(176,114),new Point(177,112),new Point(177,114),new Point(175,116),new Point(173,118)}));
		this.unistrokes.add(new Unistroke("caret", new Point[]{new Point(79,245),new Point(79,242),new Point(79,239),new Point(80,237),new Point(80,234),new Point(81,232),new Point(82,230),new Point(84,224),new Point(86,220),new Point(86,218),new Point(87,216),new Point(88,213),new Point(90,207),new Point(91,202),new Point(92,200),new Point(93,194),new Point(94,192),new Point(96,189),new Point(97,186),new Point(100,179),new Point(102,173),new Point(105,165),new Point(107,160),new Point(109,158),new Point(112,151),new Point(115,144),new Point(117,139),new Point(119,136),new Point(119,134),new Point(120,132),new Point(121,129),new Point(122,127),new Point(124,125),new Point(126,124),new Point(129,125),new Point(131,127),new Point(132,130),new Point(136,139),new Point(141,154),new Point(145,166),new Point(151,182),new Point(156,193),new Point(157,196),new Point(161,209),new Point(162,211),new Point(167,223),new Point(169,229),new Point(170,231),new Point(173,237),new Point(176,242),new Point(177,244),new Point(179,250),new Point(181,255),new Point(182,257)}));
		this.unistrokes.add(new Unistroke("zig-zag", new Point[]{new Point(307,216),new Point(333,186),new Point(356,215),new Point(375,186),new Point(399,216),new Point(418,186)}));
		this.unistrokes.add(new Unistroke("arrow", new Point[]{new Point(68,222),new Point(70,220),new Point(73,218),new Point(75,217),new Point(77,215),new Point(80,213),new Point(82,212),new Point(84,210),new Point(87,209),new Point(89,208),new Point(92,206),new Point(95,204),new Point(101,201),new Point(106,198),new Point(112,194),new Point(118,191),new Point(124,187),new Point(127,186),new Point(132,183),new Point(138,181),new Point(141,180),new Point(146,178),new Point(154,173),new Point(159,171),new Point(161,170),new Point(166,167),new Point(168,167),new Point(171,166),new Point(174,164),new Point(177,162),new Point(180,160),new Point(182,158),new Point(183,156),new Point(181,154),new Point(178,153),new Point(171,153),new Point(164,153),new Point(160,153),new Point(150,154),new Point(147,155),new Point(141,157),new Point(137,158),new Point(135,158),new Point(137,158),new Point(140,157),new Point(143,156),new Point(151,154),new Point(160,152),new Point(170,149),new Point(179,147),new Point(185,145),new Point(192,144),new Point(196,144),new Point(198,144),new Point(200,144),new Point(201,147),new Point(199,149),new Point(194,157),new Point(191,160),new Point(186,167),new Point(180,176),new Point(177,179),new Point(171,187),new Point(169,189),new Point(165,194),new Point(164,196)}));
		this.unistrokes.add(new Unistroke("left square bracket", new Point[]{new Point(140,124),new Point(138,123),new Point(135,122),new Point(133,123),new Point(130,123),new Point(128,124),new Point(125,125),new Point(122,124),new Point(120,124),new Point(118,124),new Point(116,125),new Point(113,125),new Point(111,125),new Point(108,124),new Point(106,125),new Point(104,125),new Point(102,124),new Point(100,123),new Point(98,123),new Point(95,124),new Point(93,123),new Point(90,124),new Point(88,124),new Point(85,125),new Point(83,126),new Point(81,127),new Point(81,129),new Point(82,131),new Point(82,134),new Point(83,138),new Point(84,141),new Point(84,144),new Point(85,148),new Point(85,151),new Point(86,156),new Point(86,160),new Point(86,164),new Point(86,168),new Point(87,171),new Point(87,175),new Point(87,179),new Point(87,182),new Point(87,186),new Point(88,188),new Point(88,195),new Point(88,198),new Point(88,201),new Point(88,207),new Point(89,211),new Point(89,213),new Point(89,217),new Point(89,222),new Point(88,225),new Point(88,229),new Point(88,231),new Point(88,233),new Point(88,235),new Point(89,237),new Point(89,240),new Point(89,242),new Point(91,241),new Point(94,241),new Point(96,240),new Point(98,239),new Point(105,240),new Point(109,240),new Point(113,239),new Point(116,240),new Point(121,239),new Point(130,240),new Point(136,237),new Point(139,237),new Point(144,238),new Point(151,237),new Point(157,236),new Point(159,237)}));
		this.unistrokes.add(new Unistroke("right square bracket", new Point[]{new Point(112,138),new Point(112,136),new Point(115,136),new Point(118,137),new Point(120,136),new Point(123,136),new Point(125,136),new Point(128,136),new Point(131,136),new Point(134,135),new Point(137,135),new Point(140,134),new Point(143,133),new Point(145,132),new Point(147,132),new Point(149,132),new Point(152,132),new Point(153,134),new Point(154,137),new Point(155,141),new Point(156,144),new Point(157,152),new Point(158,161),new Point(160,170),new Point(162,182),new Point(164,192),new Point(166,200),new Point(167,209),new Point(168,214),new Point(168,216),new Point(169,221),new Point(169,223),new Point(169,228),new Point(169,231),new Point(166,233),new Point(164,234),new Point(161,235),new Point(155,236),new Point(147,235),new Point(140,233),new Point(131,233),new Point(124,233),new Point(117,235),new Point(114,238),new Point(112,238)}));
		this.unistrokes.add(new Unistroke("v", new Point[]{new Point(89,164),new Point(90,162),new Point(92,162),new Point(94,164),new Point(95,166),new Point(96,169),new Point(97,171),new Point(99,175),new Point(101,178),new Point(103,182),new Point(106,189),new Point(108,194),new Point(111,199),new Point(114,204),new Point(117,209),new Point(119,214),new Point(122,218),new Point(124,222),new Point(126,225),new Point(128,228),new Point(130,229),new Point(133,233),new Point(134,236),new Point(136,239),new Point(138,240),new Point(139,242),new Point(140,244),new Point(142,242),new Point(142,240),new Point(142,237),new Point(143,235),new Point(143,233),new Point(145,229),new Point(146,226),new Point(148,217),new Point(149,208),new Point(149,205),new Point(151,196),new Point(151,193),new Point(153,182),new Point(155,172),new Point(157,165),new Point(159,160),new Point(162,155),new Point(164,150),new Point(165,148),new Point(166,146)}));
		this.unistrokes.add(new Unistroke("delete", new Point[]{new Point(123,129),new Point(123,131),new Point(124,133),new Point(125,136),new Point(127,140),new Point(129,142),new Point(133,148),new Point(137,154),new Point(143,158),new Point(145,161),new Point(148,164),new Point(153,170),new Point(158,176),new Point(160,178),new Point(164,183),new Point(168,188),new Point(171,191),new Point(175,196),new Point(178,200),new Point(180,202),new Point(181,205),new Point(184,208),new Point(186,210),new Point(187,213),new Point(188,215),new Point(186,212),new Point(183,211),new Point(177,208),new Point(169,206),new Point(162,205),new Point(154,207),new Point(145,209),new Point(137,210),new Point(129,214),new Point(122,217),new Point(118,218),new Point(111,221),new Point(109,222),new Point(110,219),new Point(112,217),new Point(118,209),new Point(120,207),new Point(128,196),new Point(135,187),new Point(138,183),new Point(148,167),new Point(157,153),new Point(163,145),new Point(165,142),new Point(172,133),new Point(177,127),new Point(179,127),new Point(180,125)}));
		this.unistrokes.add(new Unistroke("left curly brace", new Point[]{new Point(150,116),new Point(147,117),new Point(145,116),new Point(142,116),new Point(139,117),new Point(136,117),new Point(133,118),new Point(129,121),new Point(126,122),new Point(123,123),new Point(120,125),new Point(118,127),new Point(115,128),new Point(113,129),new Point(112,131),new Point(113,134),new Point(115,134),new Point(117,135),new Point(120,135),new Point(123,137),new Point(126,138),new Point(129,140),new Point(135,143),new Point(137,144),new Point(139,147),new Point(141,149),new Point(140,152),new Point(139,155),new Point(134,159),new Point(131,161),new Point(124,166),new Point(121,166),new Point(117,166),new Point(114,167),new Point(112,166),new Point(114,164),new Point(116,163),new Point(118,163),new Point(120,162),new Point(122,163),new Point(125,164),new Point(127,165),new Point(129,166),new Point(130,168),new Point(129,171),new Point(127,175),new Point(125,179),new Point(123,184),new Point(121,190),new Point(120,194),new Point(119,199),new Point(120,202),new Point(123,207),new Point(127,211),new Point(133,215),new Point(142,219),new Point(148,220),new Point(151,221)}));
		this.unistrokes.add(new Unistroke("right curly brace", new Point[]{new Point(117,132),new Point(115,132),new Point(115,129),new Point(117,129),new Point(119,128),new Point(122,127),new Point(125,127),new Point(127,127),new Point(130,127),new Point(133,129),new Point(136,129),new Point(138,130),new Point(140,131),new Point(143,134),new Point(144,136),new Point(145,139),new Point(145,142),new Point(145,145),new Point(145,147),new Point(145,149),new Point(144,152),new Point(142,157),new Point(141,160),new Point(139,163),new Point(137,166),new Point(135,167),new Point(133,169),new Point(131,172),new Point(128,173),new Point(126,176),new Point(125,178),new Point(125,180),new Point(125,182),new Point(126,184),new Point(128,187),new Point(130,187),new Point(132,188),new Point(135,189),new Point(140,189),new Point(145,189),new Point(150,187),new Point(155,186),new Point(157,185),new Point(159,184),new Point(156,185),new Point(154,185),new Point(149,185),new Point(145,187),new Point(141,188),new Point(136,191),new Point(134,191),new Point(131,192),new Point(129,193),new Point(129,195),new Point(129,197),new Point(131,200),new Point(133,202),new Point(136,206),new Point(139,211),new Point(142,215),new Point(145,220),new Point(147,225),new Point(148,231),new Point(147,239),new Point(144,244),new Point(139,248),new Point(134,250),new Point(126,253),new Point(119,253),new Point(115,253)}));
		this.unistrokes.add(new Unistroke("star", new Point[]{new Point(75,250),new Point(75,247),new Point(77,244),new Point(78,242),new Point(79,239),new Point(80,237),new Point(82,234),new Point(82,232),new Point(84,229),new Point(85,225),new Point(87,222),new Point(88,219),new Point(89,216),new Point(91,212),new Point(92,208),new Point(94,204),new Point(95,201),new Point(96,196),new Point(97,194),new Point(98,191),new Point(100,185),new Point(102,178),new Point(104,173),new Point(104,171),new Point(105,164),new Point(106,158),new Point(107,156),new Point(107,152),new Point(108,145),new Point(109,141),new Point(110,139),new Point(112,133),new Point(113,131),new Point(116,127),new Point(117,125),new Point(119,122),new Point(121,121),new Point(123,120),new Point(125,122),new Point(125,125),new Point(127,130),new Point(128,133),new Point(131,143),new Point(136,153),new Point(140,163),new Point(144,172),new Point(145,175),new Point(151,189),new Point(156,201),new Point(161,213),new Point(166,225),new Point(169,233),new Point(171,236),new Point(174,243),new Point(177,247),new Point(178,249),new Point(179,251),new Point(180,253),new Point(180,255),new Point(179,257),new Point(177,257),new Point(174,255),new Point(169,250),new Point(164,247),new Point(160,245),new Point(149,238),new Point(138,230),new Point(127,221),new Point(124,220),new Point(112,212),new Point(110,210),new Point(96,201),new Point(84,195),new Point(74,190),new Point(64,182),new Point(55,175),new Point(51,172),new Point(49,170),new Point(51,169),new Point(56,169),new Point(66,169),new Point(78,168),new Point(92,166),new Point(107,164),new Point(123,161),new Point(140,162),new Point(156,162),new Point(171,160),new Point(173,160),new Point(186,160),new Point(195,160),new Point(198,161),new Point(203,163),new Point(208,163),new Point(206,164),new Point(200,167),new Point(187,172),new Point(174,179),new Point(172,181),new Point(153,192),new Point(137,201),new Point(123,211),new Point(112,220),new Point(99,229),new Point(90,237),new Point(80,244),new Point(73,250),new Point(69,254),new Point(69,252)}));
		this.unistrokes.add(new Unistroke("pigtail", new Point[]{new Point(81,219),new Point(84,218),new Point(86,220),new Point(88,220),new Point(90,220),new Point(92,219),new Point(95,220),new Point(97,219),new Point(99,220),new Point(102,218),new Point(105,217),new Point(107,216),new Point(110,216),new Point(113,214),new Point(116,212),new Point(118,210),new Point(121,208),new Point(124,205),new Point(126,202),new Point(129,199),new Point(132,196),new Point(136,191),new Point(139,187),new Point(142,182),new Point(144,179),new Point(146,174),new Point(148,170),new Point(149,168),new Point(151,162),new Point(152,160),new Point(152,157),new Point(152,155),new Point(152,151),new Point(152,149),new Point(152,146),new Point(149,142),new Point(148,139),new Point(145,137),new Point(141,135),new Point(139,135),new Point(134,136),new Point(130,140),new Point(128,142),new Point(126,145),new Point(122,150),new Point(119,158),new Point(117,163),new Point(115,170),new Point(114,175),new Point(117,184),new Point(120,190),new Point(125,199),new Point(129,203),new Point(133,208),new Point(138,213),new Point(145,215),new Point(155,218),new Point(164,219),new Point(166,219),new Point(177,219),new Point(182,218),new Point(192,216),new Point(196,213),new Point(199,212),new Point(201,211)}));
		this.unistrokes.add(new Unistroke("flat", new Point[]{new Point(163, 129), new Point(163, 136), new Point(163, 152), new Point(163, 168), new Point(163, 189), new Point(162, 208), new Point(161, 223), new Point(161, 233), new Point(161, 241), new Point(162, 247), new Point(167, 250), new Point(174, 253), new Point(179, 254), new Point(183, 254), new Point(187, 253), new Point(191, 248), new Point(194, 242), new Point(196, 235), new Point(197, 228), new Point(198, 222), new Point(198, 217), new Point(197, 214), new Point(196, 212), new Point(195, 211), new Point(193, 209), new Point(191, 209), new Point(187, 208), new Point(185, 208), new Point(182, 208), new Point(179, 209), new Point(176, 212), new Point(173, 215), new Point(170, 219), new Point(168, 222), new Point(166, 225), new Point(164, 228), new Point(163, 230), new Point(162, 231), new Point(161, 232) }));
		this.unistrokes.add(new Unistroke("half note", new Point[]{new Point(209, 247), new Point(209, 242), new Point(209, 233), new Point(209, 224), new Point(209, 212), new Point(209, 202), new Point(209, 192), new Point(209, 184), new Point(208, 176), new Point(208, 169), new Point(208, 162), new Point(208, 152), new Point(209, 144), new Point(210, 136), new Point(212, 130), new Point(216, 125), new Point(222, 122), new Point(229, 120), new Point(238, 119), new Point(244, 119), new Point(248, 122), new Point(251, 126), new Point(253, 132), new Point(255, 142), new Point(256, 150), new Point(257, 155), new Point(257, 158), new Point(257, 159), new Point(255, 161), new Point(252, 163), new Point(248, 165), new Point(243, 167), new Point(238, 169), new Point(233, 170), new Point(229, 170), new Point(226, 170), new Point(222, 170), new Point(219, 169), new Point(216, 169), new Point(213, 168), new Point(211, 167), new Point(209, 167), new Point(207, 166), new Point(206, 166) }));
		this.unistrokes.add(new Unistroke("quarter note", new Point[]{new Point(364, 229), new Point(362, 227), new Point(357, 225), new Point(350, 223), new Point(342, 223), new Point(334, 223), new Point(327, 225), new Point(322, 228), new Point(320, 230), new Point(319, 234), new Point(318, 238), new Point(318, 243), new Point(319, 247), new Point(320, 251), new Point(324, 254), new Point(329, 257), new Point(335, 259), new Point(340, 260), new Point(345, 260), new Point(348, 260), new Point(352, 259), new Point(356, 255), new Point(360, 247), new Point(364, 232), new Point(367, 216), new Point(369, 202), new Point(369, 190), new Point(369, 179), new Point(369, 169), new Point(369, 161), new Point(369, 156), new Point(369, 152), new Point(369, 149) }));
		this.unistrokes.add(new Unistroke("eighth note", new Point[]{new Point(191, 234), new Point(188, 231), new Point(182, 229), new Point(177, 227), new Point(172, 225), new Point(168, 224), new Point(164, 224), new Point(161, 224), new Point(158, 225), new Point(155, 229), new Point(153, 233), new Point(151, 238), new Point(150, 243), new Point(150, 248), new Point(151, 253), new Point(154, 257), new Point(159, 260), new Point(162, 263), new Point(166, 264), new Point(170, 266), new Point(174, 266), new Point(178, 266), new Point(181, 266), new Point(184, 265), new Point(187, 262), new Point(189, 259), new Point(191, 254), new Point(193, 247), new Point(194, 239), new Point(194, 232), new Point(194, 225), new Point(194, 217), new Point(195, 208), new Point(195, 201), new Point(196, 193), new Point(196, 184), new Point(196, 179), new Point(196, 174), new Point(196, 170), new Point(196, 165), new Point(196, 159), new Point(196, 155), new Point(196, 151), new Point(195, 145), new Point(195, 140), new Point(195, 136), new Point(195, 133), new Point(195, 131), new Point(195, 128), new Point(195, 127), new Point(195, 125), new Point(195, 127), new Point(195, 132), new Point(196, 136), new Point(197, 139), new Point(199, 143), new Point(200, 145), new Point(202, 148), new Point(204, 150), new Point(206, 152), new Point(209, 153), new Point(211, 155), new Point(214, 156), new Point(217, 157), new Point(219, 158), new Point(221, 159), new Point(224, 159), new Point(226, 160), new Point(228, 160), new Point(231, 160), new Point(232, 160), new Point(234, 160), new Point(235, 160), new Point(236, 160), new Point(237, 160) }));
		this.unistrokes.add(new Unistroke("sixteenth note", new Point[]{new Point(138, 188), new Point(130, 188), new Point(118, 188), new Point(110, 188), new Point(102, 192), new Point(94, 197), new Point(91, 200), new Point(90, 202), new Point(89, 205), new Point(89, 211), new Point(89, 217), new Point(90, 222), new Point(92, 226), new Point(95, 228), new Point(99, 230), new Point(104, 232), new Point(110, 232), new Point(116, 231), new Point(119, 228), new Point(124, 220), new Point(127, 207), new Point(129, 190), new Point(129, 173), new Point(129, 156), new Point(129, 139), new Point(129, 126), new Point(128, 114), new Point(127, 103), new Point(126, 96), new Point(126, 92), new Point(125, 91), new Point(125, 93), new Point(125, 99), new Point(126, 106), new Point(127, 113), new Point(128, 118), new Point(128, 123), new Point(129, 127), new Point(130, 132), new Point(133, 139), new Point(138, 149), new Point(145, 158), new Point(150, 163), new Point(156, 167), new Point(162, 170), new Point(165, 172), new Point(167, 173), new Point(164, 172), new Point(158, 168), new Point(151, 165), new Point(147, 161), new Point(144, 158), new Point(141, 152), new Point(138, 143), new Point(135, 133), new Point(133, 125), new Point(131, 115), new Point(130, 108), new Point(129, 101), new Point(128, 97), new Point(127, 95), new Point(127, 93), new Point(129, 99), new Point(134, 108), new Point(140, 116), new Point(149, 124), new Point(157, 130), new Point(165, 132), new Point(171, 134), new Point(173, 134) }));
		this.unistrokes.add(new Unistroke("half rest", new Point[]{new Point(339, 192), new Point(333, 192), new Point(314, 192), new Point(297, 192), new Point(279, 192), new Point(265, 192), new Point(245, 195), new Point(232, 196), new Point(227, 196), new Point(223, 197), new Point(221, 197), new Point(219, 197), new Point(218, 197), new Point(218, 192), new Point(218, 182), new Point(218, 173), new Point(218, 165), new Point(218, 159), new Point(217, 157), new Point(219, 156), new Point(229, 154), new Point(242, 152), new Point(251, 151), new Point(257, 151), new Point(262, 151), new Point(266, 151), new Point(271, 151), new Point(279, 151), new Point(285, 151), new Point(289, 151), new Point(294, 151), new Point(298, 151), new Point(300, 151), new Point(300, 155), new Point(300, 163), new Point(300, 168), new Point(299, 171), new Point(298, 174), new Point(298, 176), new Point(298, 178), new Point(298, 183), new Point(298, 187), new Point(297, 188) }));
		this.unistrokes.add(new Unistroke("eighth rest", new Point[]{new Point(261, 224), new Point(262, 214), new Point(267, 198), new Point(273, 179), new Point(277, 169), new Point(279, 164), new Point(281, 161), new Point(283, 155), new Point(285, 148), new Point(287, 143), new Point(288, 137), new Point(289, 134), new Point(290, 132), new Point(291, 130), new Point(289, 131), new Point(286, 136), new Point(281, 141), new Point(277, 145), new Point(272, 148), new Point(265, 151), new Point(258, 154), new Point(249, 156), new Point(242, 157), new Point(238, 157), new Point(234, 154), new Point(231, 150), new Point(230, 143), new Point(230, 136), new Point(230, 132), new Point(233, 127), new Point(237, 124), new Point(242, 122), new Point(246, 121), new Point(250, 121), new Point(252, 122), new Point(254, 126), new Point(256, 131), new Point(256, 135), new Point(256, 139), new Point(254, 143), new Point(252, 146), new Point(247, 149), new Point(242, 152) }));
		this.unistrokes.add(new Unistroke("sixteenth rest", new Point[]{new Point(247, 281), new Point(252, 273), new Point(257, 267), new Point(264, 258), new Point(276, 239), new Point(291, 219), new Point(304, 200), new Point(317, 182), new Point(323, 172), new Point(328, 164), new Point(332, 157), new Point(335, 152), new Point(338, 146), new Point(341, 140), new Point(343, 137), new Point(344, 136), new Point(341, 138), new Point(335, 145), new Point(328, 154), new Point(322, 161), new Point(315, 167), new Point(308, 171), new Point(301, 174), new Point(296, 175), new Point(291, 174), new Point(286, 170), new Point(283, 165), new Point(280, 158), new Point(279, 151), new Point(279, 144), new Point(280, 136), new Point(285, 132), new Point(290, 131), new Point(294, 131), new Point(298, 131), new Point(301, 132), new Point(304, 135), new Point(306, 139), new Point(308, 143), new Point(309, 147), new Point(311, 150), new Point(312, 157), new Point(313, 164), new Point(313, 169), new Point(312, 175), new Point(310, 179), new Point(308, 184), new Point(306, 188), new Point(304, 193), new Point(300, 198), new Point(295, 206), new Point(286, 214), new Point(275, 221), new Point(263, 225), new Point(255, 225), new Point(249, 222), new Point(244, 217), new Point(242, 210), new Point(242, 202), new Point(242, 195), new Point(245, 191), new Point(250, 188), new Point(255, 187), new Point(263, 187), new Point(270, 187), new Point(275, 187), new Point(278, 188), new Point(280, 195), new Point(282, 203), new Point(284, 211), new Point(284, 214), new Point(285, 216) }));
	}
	
	public Result recognize(ArrayList<Point2D> points) {
		Unistroke candidate = new Unistroke("", points);
		int u = -1;
		double b = Double.MAX_VALUE;
		
		// cycle through all templates. compute distanceAtBestAngle. Keep track of current
		// minimal distance. That's the pick. 
		for (int i=0 ; i<unistrokes.size() ; i++) {
			// golden section search
			double d = Unistroke.distanceAtBestAngle(candidate.getPoints(), this.unistrokes.get(i),
										 -Unistroke.ANGLE_RANGE, Unistroke.ANGLE_RANGE,
										 Unistroke.ANGLE_PRECISION);
			if (d < b) {
				b = d; // best (least) distance
				u = i; // unistroke index
			}
		}

		if (u == -1) {
			return new Result("No match", 0.0);
		} else {
			Unistroke matchedTemplate = unistrokes.get(u);
			return new Result(matchedTemplate,			// template we matched
							  candidate,				// details of the candidate stroke
							  1.0 - b / Unistroke.HALF_DIAGONAL);	// score/confidence of the match
		}
	}
	
	// return the template for the given name; null if no match
	Unistroke getTemplate(String name) {
		for (int i=0 ; i<unistrokes.size() ; i++) {
			if (unistrokes.get(i).getName().equals(name)) {
				return unistrokes.get(i);
			}
		}
		return null;
	}
}

